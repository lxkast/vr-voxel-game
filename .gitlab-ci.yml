# This file is a template, and might need editing before it works on your project.
# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/#stages
#
# You can copy and paste this template into a new `.gitlab-ci.yml` file.
# You should not add this template to an existing `.gitlab-ci.yml` file by using the `include:` keyword.
#
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/development/cicd/templates/
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml

stages:          # List of stages for jobs, and their order of execution
  - build
  - test
#  - format
  
image: alpine:latest

build-job:       # This job runs in the build stage, which runs first.
  stage: build
  before_script:
    - apk add --no-cache cmake make gcc libc-dev
  script:
    - cmake .
    - cmake --build .
  artifacts:
    paths:
      - assembler-emulator/assembler/assembler
      - assembler-emulator/emulator/emulate
    expire_in: 1 hour
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - changes:
        - lib/**/*
        - assembler-emulator/**/*
        - .gitlab-ci.yml

unit-test-job:   # This job runs in the test stage.
  image: python:3.10.12-alpine
  stage: test    # It only starts when the job in the build stage completes successfully.
  needs: [build-job]
  dependencies:
    - build-job
  before_script:
    - apk add --no-cache git
  script:
    - git clone --depth=1 https://oauth2:${ACCESS_TOKEN}@gitlab.doc.ic.ac.uk/teaching-fellows/armv8_testsuite.git
    - cd armv8_testsuite/
    - mkdir solution
    - cp ../assembler-emulator/assembler/assembler solution/assemble
    - cp ../assembler-emulator/emulator/emulate solution/emulate
    - ./install
    - source .venv/bin/activate
    - ./run -p
  variables:
    ACCESS_TOKEN: $MY_PAT_SECRET 
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - changes:
        - lib/**/*
        - assembler-emulator/**/*
        - .gitlab-ci.yml



